#!/usr/bin/env bun

// –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏—Å—Ç–µ–º—ã –∑–ª—ã—Ö –ø–æ—Å—Ç–æ–≤

import { bot, scheduler } from './src/bot';
import { logger } from './src/logger';

async function runTest() {
  logger.info('üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ —Å–∏—Å—Ç–µ–º—ã –∑–ª—ã—Ö –ø–æ—Å—Ç–æ–≤');
  
  // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 5153477378 –µ—Å—Ç—å –≤ –±–∞–∑–µ
  const { getUserResponseStats } = await import('./src/db');
  const userStats = getUserResponseStats(5153477378);
  
  logger.info({
    userExists: !!userStats,
    lastResponseTime: userStats?.last_response_time,
    responseCount: userStats?.response_count
  }, 'üë§ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 5153477378');
  
  // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
  const checkDelay = process.env.ANGRY_POST_DELAY_MINUTES || 2;
  const channelId = scheduler.CHANNEL_ID;
  
  logger.info({
    checkDelayMinutes: checkDelay,
    channelId,
    channelIdFromEnv: process.env.CHANNEL_ID
  }, '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã');
  
  // 3. –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É –ø–æ—Å—Ç–∞
  logger.info('üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ—Å—Ç–∞ —á–µ—Ä–µ–∑ /fro...');
  
  // –°–∏–º—É–ª–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É /fro
  const adminChatId = Number(process.env.ADMIN_CHAT_ID || 0);
  await scheduler.sendDailyMessage(adminChatId);
  
  logger.info(`‚è∞ –û–∂–∏–¥–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –æ—Ç–≤–µ—Ç–æ–≤ —á–µ—Ä–µ–∑ ${checkDelay} –º–∏–Ω—É—Ç(—ã)...`);
  logger.info('üí° –ß—Ç–æ–±—ã –∑–ª–æ–π –ø–æ—Å—Ç –ø–æ—è–≤–∏–ª—Å—è - –ù–ï –ø–∏—à–∏—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –ø–æ–¥ –ø–æ—Å—Ç–æ–º!');
  
  // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
  const status = scheduler.getSchedulerStatus();
  logger.info(status, 'üìä –°—Ç–∞—Ç—É—Å –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞');
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
runTest()
  .then(() => {
    logger.info('‚úÖ –¢–µ—Å—Ç –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ! –û–∂–∏–¥–∞–π—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤.');
    // –ù–µ –∑–∞–∫—Ä—ã–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å, —á—Ç–æ–±—ã —Ç–∞–π–º–µ—Ä —Å—Ä–∞–±–æ—Ç–∞–ª
  })
  .catch(error => {
    logger.error(error, '‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Ç–µ—Å—Ç–∞');
    process.exit(1);
  });
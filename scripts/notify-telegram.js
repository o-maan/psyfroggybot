#!/usr/bin/env bun

// ะกะบัะธะฟั ะดะปั ะพัะฟัะฐะฒะบะธ ัะฒะตะดะพะผะปะตะฝะธะน ะฒ Telegram ะธะท GitHub Actions
const TELEGRAM_API_URL = "https://api.telegram.org/bot";
const CHAT_ID = "-1002496122257";

async function sendTelegramNotification(message, token) {
  if (!token) {
    console.error("โ TELEGRAM_BOT_TOKEN ะฝะต ะฝะฐะนะดะตะฝ");
    process.exit(1);
  }

  const url = `${TELEGRAM_API_URL}${token}/sendMessage`;
  const payload = {
    chat_id: CHAT_ID,
    text: message,
    parse_mode: "HTML",
  };

  try {
    const response = await fetch(url, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify(payload),
    });

    if (response.ok) {
      console.log("โ ะฃะฒะตะดะพะผะปะตะฝะธะต ััะฟะตัะฝะพ ะพัะฟัะฐะฒะปะตะฝะพ ะฒ Telegram");
      process.exit(0);
    } else {
      const errorText = await response.text();
      console.error("โ ะัะธะฑะบะฐ ะพัะฟัะฐะฒะบะธ ัะฒะตะดะพะผะปะตะฝะธั:", errorText);
      process.exit(1);
    }
  } catch (error) {
    console.error("โ ะัะธะฑะบะฐ ะฟัะธ ะพัะฟัะฐะฒะบะต ัะฒะตะดะพะผะปะตะฝะธั ะฒ Telegram:", error);
    process.exit(1);
  }
}

// ะะพะปััะฐะตะผ ะฐัะณัะผะตะฝัั ะบะพะผะฐะฝะดะฝะพะน ัััะพะบะธ
const messageType = process.argv[2];
const botToken = process.env.TELEGRAM_BOT_TOKEN;
const currentTime = new Date().toLocaleString("ru-RU", { timeZone: "Europe/Moscow" });

// ะะพะปััะฐะตะผ ะฟะพัะปะตะดะฝะตะต commit ัะพะพะฑัะตะฝะธะต ะธะท ะฟะตัะตะผะตะฝะฝะพะน ะพะบััะถะตะฝะธั ะธะปะธ git
async function getCommitMessage() {
  if (process.env.GITHUB_SHA) {
    try {
      // ะ GitHub Actions ะผะพะถะฝะพ ะฟะพะปััะธัั commit message ัะตัะตะท git log
      const { execSync } = require('child_process');
      const commitMsg = execSync(`git log -1 --pretty=%B ${process.env.GITHUB_SHA}`, { encoding: 'utf8' }).trim();
      return `${commitMsg} (${process.env.GITHUB_SHA.substring(0, 7)})`;
    } catch (error) {
      console.warn('ะะต ัะดะฐะปะพัั ะฟะพะปััะธัั commit message:', error.message);
      return `ะะทะผะตะฝะตะฝะธั (${process.env.GITHUB_SHA.substring(0, 7)})`;
    }
  }
  return 'ะะพะบะฐะปัะฝะพะต ัะฐะทะฒะตัััะฒะฐะฝะธะต';
}


// ะัะพะฒะตััะตะผ ัะธะฟ ัะพะพะฑัะตะฝะธั
if (!messageType || !['start', 'success', 'failure'].includes(messageType)) {
  console.error("โ ะะตะฒะตัะฝัะน ัะธะฟ ัะพะพะฑัะตะฝะธั. ะะพัััะฟะฝัะต: start, success, failure");
  process.exit(1);
}

// ะัะฟัะฐะฒะปัะตะผ ัะฒะตะดะพะผะปะตะฝะธะต
(async () => {
  const commitMsg = await getCommitMessage();
  
  // ะะฑะฝะพะฒะปัะตะผ ัะพะพะฑัะตะฝะธั ั ะฐะบััะฐะปัะฝัะผ commit message
  const messages = {
    start: `๐ <b>ะะฐัะฐั ะดะตะฟะปะพะน PSY Froggy Bot</b>

๐ฆ ะะตัะบะฐ: main
๐ง ะกะตัะฒะตั: Digital Ocean
๐ ะะทะผะตะฝะตะฝะธั: ${commitMsg}
โฐ ะัะตะผั: ${currentTime}`,

    success: `โ <b>ะะตะฟะปะพะน ััะฟะตัะฝะพ ะทะฐะฒะตัััะฝ!</b>

๐ PSY Froggy Bot ะพะฑะฝะพะฒะปัะฝ
๐ ะะพะผะตะฝ: psy-froggy-bot.invntrm.ru
๐ PM2: ะฟะตัะตะทะฐะฟััะตะฝ
๐ ะะทะผะตะฝะตะฝะธั: ${commitMsg}
โฐ ะัะตะผั: ${currentTime}`,

    failure: `โ <b>ะะตะฟะปะพะน ะฝะต ัะดะฐะปัั!</b>

๐ฅ ะัะธะฑะบะฐ ะฟัะธ ะพะฑะฝะพะฒะปะตะฝะธะธ PSY Froggy Bot
๐ง ะขัะตะฑัะตััั ะฒะผะตัะฐัะตะปัััะฒะพ
๐ ะัะพะฒะตัััะต ะปะพะณะธ GitHub Actions
๐ ะะพะฟััะบะฐ ะฟัะธะผะตะฝะธัั: ${commitMsg}
โฐ ะัะตะผั: ${currentTime}`,
  };
  
  await sendTelegramNotification(messages[messageType], botToken);
})(); 
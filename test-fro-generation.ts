import { generateMessage } from './src/llm';
import { readFileSync } from 'fs';

async function testFroGeneration() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è\n');
  
  // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ–º–ø—Ç –∫–∞–∫ –≤ scheduler.ts
  const promptBase = readFileSync('assets/prompts/scheduled-message.md', 'utf-8');
  
  // –ó–∞–º–µ–Ω—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
  let prompt = promptBase
    .replace(/\{userName\}/g, '–ê–ª–µ–∫—Å')
    .replace(/\{userGender\}/g, 'male');
    
  // –î–æ–±–∞–≤–ª—è–µ–º –¥–∞—Ç—É
  const now = new Date();
  const dateTimeStr = now.toLocaleDateString('ru-RU', {
    year: 'numeric',
    month: 'long',
    day: 'numeric',
    hour: '2-digit',
    minute: '2-digit',
  });
  
  prompt += `\n\n–°–µ–≥–æ–¥–Ω—è: ${dateTimeStr}.`;
  
  console.log('üìù –ü—Ä–æ–º–ø—Ç –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω, –∑–∞–ø—Ä–∞—à–∏–≤–∞—é LLM...\n');
  
  const result = await generateMessage(prompt);
  
  console.log('ü§ñ –†–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç LLM:');
  console.log('–î–ª–∏–Ω–∞:', result.length);
  console.log('–°–æ–¥–µ—Ä–∂–∏–º–æ–µ:', result.substring(0, 500) + (result.length > 500 ? '...' : ''));
  
  if (result === 'HF_JSON_ERROR') {
    console.log('\n‚ùå –ü–æ–ª—É—á–µ–Ω–∞ –æ—à–∏–±–∫–∞ HF_JSON_ERROR');
  } else {
    try {
      const json = JSON.parse(result);
      console.log('\n‚úÖ JSON —É—Å–ø–µ—à–Ω–æ —Ä–∞—Å–ø–∞—Ä—Å–µ–Ω:');
      console.log('encouragement.text:', json.encouragement?.text || '–ù–ï–¢');
      console.log('negative_part.additional_text:', json.negative_part?.additional_text || 'null');
      console.log('positive_part.additional_text:', json.positive_part?.additional_text || 'null');
      console.log('feels_and_emotions.additional_text:', json.feels_and_emotions?.additional_text || 'null');
      
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ "..."
      if (json.encouragement?.text === '...' || 
          json.negative_part?.additional_text === '...' ||
          json.positive_part?.additional_text === '...' ||
          json.feels_and_emotions?.additional_text === '...') {
        console.log('\n‚ö†Ô∏è –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï: –ú–æ–¥–µ–ª—å –≤–µ—Ä–Ω—É–ª–∞ "..." –≤–º–µ—Å—Ç–æ —Ä–µ–∞–ª—å–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞!');
      }
    } catch (e) {
      console.log('\n‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON:', e.message);
    }
  }
}

testFroGeneration().catch(console.error);
import { Telegraf } from 'telegraf';
import { Scheduler } from '../../scheduler';
import { botLogger } from '../../logger';

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /test
export function registerTestCommand(bot: Telegraf, scheduler: Scheduler) {
  bot.command('test', async ctx => {
    const chatId = ctx.chat.id;
    const fromId = ctx.from?.id;
    botLogger.info({ userId: fromId || 0, chatId }, `üì± –ö–æ–º–∞–Ω–¥–∞ /test –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${fromId}`);

    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –µ–≥–æ –¥–ª–∏–Ω—É
    const message = await scheduler.generateScheduledMessage(fromId);
    await ctx.reply(
      `üìä <b>–¢–ï–°–¢ –ì–ï–ù–ï–†–ê–¶–ò–ò –°–û–û–ë–©–ï–ù–ò–Ø</b>\n\n` +
        `üìè –î–ª–∏–Ω–∞: ${message.length} —Å–∏–º–≤–æ–ª–æ–≤\n` +
        `${
          message.length > 1024 ? `‚ùå –ü–†–ï–í–´–®–ï–ù –õ–ò–ú–ò–¢ –Ω–∞ ${message.length - 1024} —Å–∏–º–≤–æ–ª–æ–≤!` : '‚úÖ –í –ø—Ä–µ–¥–µ–ª–∞—Ö –ª–∏–º–∏—Ç–∞'
        }\n\n` +
        `<b>–°–æ–æ–±—â–µ–Ω–∏–µ:</b>\n${message}`,
      { parse_mode: 'HTML' }
    );

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –∫–∞–Ω–∞–ª —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ –ø—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç
    if (message.length <= 1024) {
      await scheduler.sendDailyMessage(fromId);
    }
  });
}
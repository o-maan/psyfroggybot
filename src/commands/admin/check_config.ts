import { Telegraf } from 'telegraf';
import { Scheduler } from '../../scheduler';

// –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —É—Ç—Ä–µ–Ω–Ω–µ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
export function registerCheckConfigCommand(bot: Telegraf, scheduler: Scheduler) {
  bot.command('check_config', async ctx => {
    const chatId = ctx.chat.id;
    const adminChatId = Number(process.env.ADMIN_CHAT_ID || 0);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–º–∞–Ω–¥—É –≤—ã–ø–æ–ª–Ω—è–µ—Ç –∞–¥–º–∏–Ω
    if (chatId !== adminChatId) {
      await ctx.reply('‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É');
      return;
    }

    const TARGET_USER_ID = scheduler.getTargetUserId();
    const status = scheduler.getSchedulerStatus();

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–º–ø—Ç–æ–≤
    const fs = require('fs');
    const textPromptExists = fs.existsSync('assets/prompts/no-answer');
    const imagePromptExists = fs.existsSync('assets/prompts/frog-image-promt-angry');

    await ctx.reply(
      `üîß <b>–ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –£–¢–†–ï–ù–ù–ï–ô –ü–†–û–í–ï–†–ö–ò</b>\n\n` +
        `üë§ –¶–µ–ª–µ–≤–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: <code>${TARGET_USER_ID}</code>\n` +
        `üì¢ –ö–∞–Ω–∞–ª –¥–ª—è –ø–æ—Å—Ç–æ–≤: <code>${scheduler.CHANNEL_ID}</code>\n` +
        `‚è∞ –í—Ä–µ–º—è –ø—Ä–æ–≤–µ—Ä–∫–∏: <b>8:00 –ú–°–ö</b>\n` +
        `‚òÄÔ∏è –°—Ç–∞—Ç—É—Å —É—Ç—Ä–µ–Ω–Ω–µ–π –ø—Ä–æ–≤–µ—Ä–∫–∏: ${status.isMorningRunning ? 'üü¢ –ê–∫—Ç–∏–≤–Ω–∞' : 'üî¥ –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞'}\n\n` +
        `üìÑ <b>–§–∞–π–ª—ã –ø—Ä–æ–º–ø—Ç–æ–≤:</b>\n` +
        `‚îú‚îÄ –¢–µ–∫—Å—Ç (no-answer): ${textPromptExists ? '‚úÖ –ù–∞–π–¥–µ–Ω' : '‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω'}\n` +
        `‚îî‚îÄ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (frog-image-promt-angry): ${imagePromptExists ? '‚úÖ –ù–∞–π–¥–µ–Ω' : '‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω'}\n\n` +
        `üïê –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –ú–°–ö: <code>${status.currentTime}</code>`,
      { parse_mode: 'HTML' }
    );
  });
}
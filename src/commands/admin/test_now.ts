import { Telegraf } from 'telegraf';
import { Scheduler } from '../../scheduler';
import { logger, botLogger } from '../../logger';

// –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞ —Ä–∞—Å—Å—ã–ª–∫–∏
export function registerTestNowCommand(bot: Telegraf, scheduler: Scheduler) {
  bot.command('test_now', async ctx => {
    const chatId = ctx.chat.id;
    const adminChatId = Number(process.env.ADMIN_CHAT_ID || 0);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–º–∞–Ω–¥—É –≤—ã–ø–æ–ª–Ω—è–µ—Ç –∞–¥–º–∏–Ω
    if (chatId !== adminChatId) {
      await ctx.reply('‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É');
      return;
    }

    await ctx.reply('üß™ <b>–ù–ï–ú–ï–î–õ–ï–ù–ù–´–ô –¢–ï–°–¢ –†–ê–°–°–´–õ–ö–ò</b>\n\n–ó–∞–ø—É—Å–∫–∞—é —Ä–∞—Å—Å—ã–ª–∫—É –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å...', { parse_mode: 'HTML' });

    try {
      logger.info('–ó–∞–ø—É—Å–∫ –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞ —Ä–∞—Å—Å—ã–ª–∫–∏');
      await scheduler.sendDailyMessagesToAll(adminChatId);
      await ctx.reply('‚úÖ üß™ –¢–µ—Å—Ç —Ä–∞—Å—Å—ã–ª–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
    } catch (e) {
      const error = e as Error;
      botLogger.error({ error: error.message, stack: error.stack }, '–û—à–∏–±–∫–∞ –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞ —Ä–∞—Å—Å—ã–ª–∫–∏');
      await ctx.reply(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–µ —Ä–∞—Å—Å—ã–ª–∫–∏:\n<code>${error}</code>`, {
        parse_mode: 'HTML',
      });
    }
  });
}
import { botLogger } from '../../logger';
import type { BotContext } from '../../types';
import { getDayRatingSupportWord } from '../../utils/support-words';

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫ –æ—Ü–µ–Ω–∫–∏ –¥–Ω—è
export async function handleDayRating(ctx: BotContext) {
  try {
    const match = ctx.match![0].split('_');
    const channelMessageId = parseInt(match[2]);
    const rating = parseInt(match[3]);
    const userId = ctx.from?.id;

    // –≠–º–æ–¥–∑–∏ –¥–ª—è callback –æ—Ç–≤–µ—Ç–∞
    const emojis = {
      1: 'üò≠',
      2: 'üò©', 
      3: 'ü´§',
      4: 'üòä',
      5: 'ü§©'
    };
    
    await ctx.answerCbQuery(`${emojis[rating as keyof typeof emojis]} –°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ü–µ–Ω–∫—É!`);

    botLogger.info(
      {
        action: 'day_rating',
        channelMessageId,
        rating,
        userId,
      },
      'üìä –ü–æ–ª—É—á–µ–Ω–∞ –æ—Ü–µ–Ω–∫–∞ –¥–Ω—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'
    );

    // –ü–æ–ª—É—á–∞–µ–º —Å–ª–æ–≤–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –¥–ª—è —ç—Ç–æ–π –æ—Ü–µ–Ω–∫–∏
    const supportText = await getDayRatingSupportWord(channelMessageId, rating);
    
    // –î–æ–±–∞–≤–ª—è–µ–º "–ñ–¥—É —Ç–µ–±—è –∑–∞–≤—Ç—Ä–∞" –∫ —Å–ª–æ–≤–∞–º –ø–æ–¥–¥–µ—Ä–∂–∫–∏
    const fullText = supportText + '\n–ñ–¥—É —Ç–µ–±—è –∑–∞–≤—Ç—Ä–∞';

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–ª–æ–≤–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏
    await ctx.telegram.sendMessage(ctx.chat!.id, fullText, {
      parse_mode: 'HTML',
      reply_parameters: {
        message_id: ctx.callbackQuery.message!.message_id,
      },
    });

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ü–µ–Ω–∫—É –≤ –ë–î
    const { db } = await import('../../db');
    try {
      const query = db.query(`
        SELECT * FROM interactive_posts WHERE channel_message_id = ?
      `);
      const post = query.get(channelMessageId) as any;
      
      if (post) {
        const messageData = post.message_data ? JSON.parse(post.message_data) : {};
        messageData.day_rating = rating;
        messageData.day_rating_time = new Date().toISOString();
        
        const update = db.query(`
          UPDATE interactive_posts
          SET message_data = ?
          WHERE channel_message_id = ?
        `);
        update.run(JSON.stringify(messageData), channelMessageId);
        
        botLogger.info({ channelMessageId, rating }, '–û—Ü–µ–Ω–∫–∞ –¥–Ω—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ –ë–î');
      }
    } catch (error) {
      botLogger.error({ error, channelMessageId }, '–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—Ü–µ–Ω–∫–∏ –¥–Ω—è');
    }

  } catch (error) {
    botLogger.error({ error: (error as Error).message }, '–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ü–µ–Ω–∫–∏ –¥–Ω—è');
  }
}
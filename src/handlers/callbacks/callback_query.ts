import { botLogger } from '../../logger';
import type { BotContext } from '../../types';

// –û–±—â–∏–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—Å–µ—Ö callback_query (–¥–ª—è –æ—Ç–ª–∞–¥–∫–∏)
export async function handleCallbackQuery(ctx: BotContext, next: () => Promise<void>) {
  const data = 'data' in ctx.callbackQuery ? ctx.callbackQuery.data : undefined;
  const chatId = ctx.callbackQuery.message?.chat?.id;

  botLogger.info(
    {
      callbackData: data,
      fromId: ctx.from?.id,
      chatId: chatId,
      messageId: ctx.callbackQuery.message?.message_id,
      isPracticeDone: data?.startsWith('practice_done_'),
      isPracticePostpone: data?.startsWith('practice_postpone_'),
    },
    'üîî –ü–æ–ª—É—á–µ–Ω callback_query'
  );

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ callback –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è
  if (data?.startsWith('practice_')) {
    botLogger.info(
      {
        callbackData: data,
        willBeHandled: true,
      },
      '‚úÖ Callback –±—É–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω'
    );
  }

  return next();
}
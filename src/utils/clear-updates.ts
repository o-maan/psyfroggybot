import { logger } from '../logger';

// –ù–ï –æ—á–∏—â–∞–µ–º pending updates - –ø—É—Å—Ç—å Telegraf –∏—Ö –æ–±—Ä–∞–±–æ—Ç–∞–µ—Ç
export async function clearPendingUpdates() {
  try {
    const token = process.env.TELEGRAM_BOT_TOKEN;
    if (!token) return;

    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é o webhook
    const webhookResponse = await fetch(`https://api.telegram.org/bot${token}/getWebhookInfo`);
    const webhookData = await webhookResponse.json();

    if (webhookData.ok && webhookData.result.pending_update_count > 0) {
      logger.info(
        {
          pendingCount: webhookData.result.pending_update_count,
        },
        'üîÑ –ù–∞–π–¥–µ–Ω—ã pending updates, Telegraf –∏—Ö –æ–±—Ä–∞–±–æ—Ç–∞–µ—Ç'
      );
    } else {
      logger.info('‚úÖ –û—á–µ—Ä–µ–¥—å updates –ø—É—Å—Ç–∞');
    }
  } catch (error) {
    logger.warn({ error: (error as Error).message }, '‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—á–µ—Ä–µ–¥—å updates');
  }
}